# Apache Software License 2.0
# 
# Copyright (c) ZenML GmbH 2024. All rights reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 

# environment configuration
settings:
  docker:
    python_package_installer: uv
    required_integrations:
      - sklearn
      - slack
      - bentoml

# configuration of steps  
steps:
  model_trainer:
    parameters:
      name: gitguarden
  promote_with_metric_compare:
    parameters:
      mlflow_model_name: gitguarden
  notify_on_success:
    parameters:
      notify_on_success: False

# configuration of the Model Control Plane
model:
  name: gitguarden
  license: apache
  description: gitguarden E2E Batch Use Case
  audience: All ZenML users
  use_cases: |
    The ZenML E2E project project demonstrates how the most important steps of 
    the ML Production Lifecycle can be implemented in a reusable way remaining 
    agnostic to the underlying infrastructure, and shows how to integrate them together 
    into pipelines for Training and Batch Inference purposes.
  ethics: No impact.
  tags:
  - e2e
  - batch
  - sklearn
  - from template
  - ZenML delivered

# pipeline level extra configurations
extra:
  notify_on_failure: True
# pipeline level parameters
# Updated train_config.yaml

parameters:
  target_env: staging
  model_search_space:
    random_forest:
      model_package: sklearn.ensemble
      model_class: RandomForestClassifier
      search_grid:
        criterion:
          - gini
          - entropy
        max_depth:
          - 2
          - 4
          - 6
          - 8
          - 10
          - 12
          - None  # Allow unlimited depth
        min_samples_leaf:
          range:
            start: 1
            end: 15
        n_estimators:
          range:
            start: 50
            end: 1000
            step: 50
        max_features:
          - auto
          - sqrt
          - log2
    decision_tree:
      model_package: sklearn.tree
      model_class: DecisionTreeClassifier
      search_grid:
        criterion:
          - gini
          - entropy
        max_depth:
          - 2
          - 4
          - 6
          - 8
          - 10
          - 12
          - None
        min_samples_leaf:
          range:
            start: 1
            end: 15
    gradient_boosting:
      model_package: sklearn.ensemble
      model_class: GradientBoostingClassifier
      search_grid:
        learning_rate:
          - 0.01
          - 0.1
          - 0.2
        n_estimators:
          range:
            start: 50
            end: 500
            step: 50
        max_depth:
          - 3
          - 5
          - 7
        subsample:
          - 0.6
          - 0.8
          - 1.0
    svc:
      model_package: sklearn.svm
      model_class: SVC
      search_grid:
        C:
          - 0.1
          - 1
          - 10
        kernel:
          - linear
          - rbf
        gamma:
          - scale
          - auto